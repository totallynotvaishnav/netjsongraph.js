function createLeafletCoordSystem(t,e){const{util:o,graphic:n,matrix:i}=t,a=e.Layer.extend({initialize(t){this._container=t},onAdd(t){t.getPane(this.options.pane).appendChild(this._container),t.zoomControl.setPosition("topright")},onRemove(){e.DomUtil.remove(this._container)},_update(){}});function r(t,o){this._map=t,this.dimensions=["lng","lat"],this._mapOffset=[0,0],this._api=o,this._projection=e.Projection.Mercator}function s(t,e,o,n){const{leafletModel:i,seriesModel:a}=o,r=i?i.coordinateSystem:a?a.coordinateSystem||(a.getReferringComponents("leaflet")[0]||{}).coordinateSystem:null;return r===this?r[t](n):null}return r.dimensions=["lng","lat"],r.prototype.dimensions=["lng","lat"],r.prototype.setZoom=function(t){this._zoom=t},r.prototype.setCenter=function(t){this._center=this._projection.project(new e.LatLng(t[1],t[0]))},r.prototype.setMapOffset=function(t){this._mapOffset=t},r.prototype.getLeaflet=function(){return this._map},r.prototype.getViewRect=function(){const t=this._api;return new n.BoundingRect(0,0,t.getWidth(),t.getHeight())},r.prototype.getRoamTransform=function(){return i.create()},r.prototype.dataToPoint=function(t){const o=new e.LatLng(t[1],t[0]),n=this._map.latLngToLayerPoint(o),i=this._mapOffset;return[n.x-i[0],n.y-i[1]]},r.prototype.pointToData=function(t){const e=this._mapOffset,o=this._map.layerPointToLatLng({x:t[0]+e[0],y:t[1]+e[1]});return[o.lng,o.lat]},r.prototype.convertToPixel=o.curry(s,"dataToPoint"),r.prototype.convertFromPixel=o.curry(s,"pointToData"),r.create=function(t,o){let n;const i=[],s=o.getDom();return t.eachComponent("leaflet",(t=>{const p=o.getZr().painter.getViewportRoot();if(void 0===e)throw new Error("Leaflet api is not loaded");if(n)throw new Error("Only one leaflet component can exist");if(!t.__map){let o=s.querySelector(".ec-extension-leaflet");o&&(p.style.left="0px",p.style.top="0px",s.removeChild(o)),o=document.createElement("div"),o.style.cssText="width:100%;height:100%",o.classList.add("ec-extension-leaflet"),s.appendChild(o),t.__map=e.map(o,t.get("mapOptions"));const n=t.__map,i=t.get("tiles"),r={};let l=!1;if(i.forEach((t=>{const o=e.tileLayer(t.urlTemplate,t.options);t.label?(l||(o.addTo(n),l=!0),r[t.label]=o):o.addTo(n)})),i.length>1){const o=t.get("layerControl");e.control.layers(r,{},o).addTo(n)}const c=document.createElement("div");c.style="position: absolute;left: 0;top: 0;z-index: 100",c.appendChild(p),new a(c).addTo(n)}const l=t.__map;n=new r(l,o),i.push(n),n.setMapOffset(t.__mapOffset||[0,0]);const{center:c,zoom:m}=t.get("mapOptions");c&&m&&(n.setZoom(m),n.setCenter(c)),t.coordinateSystem=n})),t.eachSeries((t=>{"leaflet"===t.get("coordinateSystem")&&(t.coordinateSystem=n)})),i},r}export default createLeafletCoordSystem;